{"ast":null,"code":"var _jsxFileName = \"C:\\\\ProyectoSofia\\\\gymfront\\\\src\\\\Layouts\\\\CardComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Cards } from '../Ui/Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CardComponent = () => {\n  _s();\n  const [selectedButton, setSelectedButton] = useState(null);\n  const [numCards, setNumCards] = useState(0);\n  const handleButtonClick = buttonId => {\n    setSelectedButton(buttonId);\n  };\n  const handleClick = () => {\n    setNumCards(numCards + 5);\n  };\n  const renderCards = () => {\n    // Aquí puedes reemplazar \"data\" con tu propio conjunto de datos de tarjetas\n    const data = [{\n      id: 1,\n      buttonId: 'button1',\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"store-cards\",\n        children: [/*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 75\n        }, this), /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 83\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 46\n      }, this)\n    }, {\n      id: 2,\n      buttonId: 'button2',\n      content: 'Contenido de la tarjeta 2'\n    }, {\n      id: 3,\n      buttonId: 'button3',\n      content: 'Contenido de la tarjeta 3'\n    }, {\n      id: 4,\n      buttonId: 'button4',\n      content: 'Contenido de la tarjeta 4'\n    }];\n\n    // Filtra las tarjetas basadas en el botón seleccionado\n    const filteredCards = data.filter(card => card.buttonId === selectedButton);\n    return filteredCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: card.content\n    }, card.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this));\n  };\n  const renderClick = () => {\n    const cards = [];\n    for (let i = 1; i <= numCards; i++) {\n      cards.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Cards, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 31\n        }, this)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this));\n    }\n    return cards;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonCards\",\n        onClick: () => handleButtonClick('button1'),\n        children: \"Bot\\xF3n 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonCards\",\n        onClick: () => handleButtonClick('button2'),\n        children: \"Bot\\xF3n 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonCards\",\n        onClick: () => handleButtonClick('button3'),\n        children: \"Bot\\xF3n 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonCards\",\n        onClick: () => handleButtonClick('button4'),\n        children: \"Bot\\xF3n 4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Mostrar m\\xE1s cartas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), renderCards(), renderClick()]\n  }, void 0, true);\n};\n_s(CardComponent, \"Wh2nVAPUyjld8cNZ1t5SLEdcVfQ=\");\n_c = CardComponent;\nexport default CardComponent;\nvar _c;\n$RefreshReg$(_c, \"CardComponent\");","map":{"version":3,"names":["React","useState","Cards","jsxDEV","_jsxDEV","Fragment","_Fragment","CardComponent","_s","selectedButton","setSelectedButton","numCards","setNumCards","handleButtonClick","buttonId","handleClick","renderCards","data","id","content","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filteredCards","filter","card","map","renderClick","cards","i","push","onClick","_c","$RefreshReg$"],"sources":["C:/ProyectoSofia/gymfront/src/Layouts/CardComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Cards } from '../Ui/Cards';\r\n\r\nconst CardComponent = () => {\r\n  const [selectedButton, setSelectedButton] = useState(null);\r\n  const [numCards, setNumCards] = useState(0);\r\n\r\n  const handleButtonClick = (buttonId) => {\r\n    setSelectedButton(buttonId);\r\n  };\r\n  const handleClick = () => {\r\n    setNumCards(numCards + 5);\r\n  }\r\n\r\n  const renderCards = () => {\r\n    // Aquí puedes reemplazar \"data\" con tu propio conjunto de datos de tarjetas\r\n    const data = [\r\n      { id: 1, buttonId: 'button1', content: <div className='store-cards'><Cards/><Cards/></div> },\r\n      { id: 2, buttonId: 'button2', content: 'Contenido de la tarjeta 2' },\r\n      { id: 3, buttonId: 'button3', content: 'Contenido de la tarjeta 3' },\r\n      { id: 4, buttonId: 'button4', content: 'Contenido de la tarjeta 4' },\r\n    ];\r\n\r\n    // Filtra las tarjetas basadas en el botón seleccionado\r\n    const filteredCards = data.filter((card) => card.buttonId === selectedButton);\r\n\r\n    return filteredCards.map((card) => (\r\n      <div key={card.id}>{card.content}</div>\r\n    ));\r\n\r\n  };\r\n\r\n  const renderClick = () => {\r\n    const cards = [];\r\n    for (let i = 1; i <= numCards; i++) {\r\n      cards.push(<div key={i}><Cards/></div>);\r\n    }\r\n    return cards;\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <div className='buttons'>\r\n      <button className='buttonCards' onClick={() => handleButtonClick('button1')}>Botón 1</button>\r\n      <button className='buttonCards' onClick={() => handleButtonClick('button2')}>Botón 2</button>\r\n      <button className='buttonCards' onClick={() => handleButtonClick('button3')}>Botón 3</button>\r\n      <button className='buttonCards' onClick={() => handleButtonClick('button4')}>Botón 4</button>\r\n    </div>\r\n    <button onClick={handleClick}>Mostrar más cartas</button>\r\n      {renderCards()}\r\n      {renderClick()}\r\n\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}