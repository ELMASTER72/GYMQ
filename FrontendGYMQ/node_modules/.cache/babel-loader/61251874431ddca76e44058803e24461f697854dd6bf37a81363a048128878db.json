{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Documents\\\\GYMQ\\\\FrontendGYMQ\\\\src\\\\Layouts\\\\DataStore\\\\DataStore.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataStore = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleCategorySelect = category => {\n    setSelectedCategory(category);\n    setSearchQuery(''); // Restablece el término de búsqueda al seleccionar una categoría\n    setIsOpen(false);\n    // Aquí puedes llamar a una función para cargar las tarjetas relacionadas con la categoría seleccionada\n    // por ejemplo: loadCardsByCategory(category);\n  };\n\n  const handleSearch = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  // Ejemplo de lista de tarjetas (cada tarjeta es un objeto con propiedades específicas)\n  const cards = [{\n    id: 1,\n    title: 'Tarjeta 1',\n    category: 'Categoría 1',\n    description: 'Esta es la descripción de la Tarjeta 1',\n    place: '000',\n    image: 'imagen1.jpg'\n  }, {\n    id: 2,\n    title: 'Tarjeta 2',\n    category: 'Categoría 2',\n    description: 'Esta es la descripción de la Tarjeta 2',\n    place: '000',\n    image: 'imagen2.jpg'\n  }, {\n    id: 3,\n    title: 'Tarjeta 3',\n    category: 'Categoría 3',\n    description: 'Esta es la descripción de la Tarjeta 3',\n    place: '000',\n    image: 'imagen3.jpg'\n  }, {\n    id: 4,\n    title: 'Tarjeta 4',\n    category: 'Categoría 4',\n    description: 'Esta es la descripción de la Tarjeta 4',\n    place: '000',\n    image: 'imagen4.jpg'\n  }];\n\n  // Filtra las tarjetas según la categoría seleccionada y el término de búsqueda\n  const filteredCards = cards.filter(card => {\n    if (selectedCategory && card.category !== selectedCategory) {\n      return false; // Ignora las tarjetas que no coinciden con la categoría seleccionada\n    }\n\n    if (searchQuery && !card.title.toLowerCase().includes(searchQuery.toLowerCase())) {\n      return false; // Ignora las tarjetas que no coinciden con el término de búsqueda\n    }\n\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"categoryProducts\",\n      onClick: toggleDropdown,\n      children: \"Categor\\xEDas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), selectedCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchProducts\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchQuery,\n        onChange: handleSearch,\n        placeholder: \"Buscar...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"categorys\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleCategorySelect('Categoría 1'),\n        children: \"Categor\\xEDa 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleCategorySelect('Categoría 2'),\n        children: \"Categor\\xEDa 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleCategorySelect('Categoría 3'),\n        children: \"Categor\\xEDa 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), selectedCategory && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectedCategory\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Tarjetas de la categor\\xEDa: \", selectedCategory]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), filteredCards.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredCards.map(card => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: card.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card.image,\n            alt: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)]\n        }, card.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay tarjetas disponibles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(DataStore, \"4rpdlERx7fj7/moimIMlFkq9i1A=\");\n_c = DataStore;\nexport default DataStore;\nvar _c;\n$RefreshReg$(_c, \"DataStore\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","DataStore","_s","isOpen","setIsOpen","selectedCategory","setSelectedCategory","searchQuery","setSearchQuery","toggleDropdown","handleCategorySelect","category","handleSearch","event","target","value","cards","id","title","description","place","image","filteredCards","filter","card","toLowerCase","includes","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","length","map","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Documents/GYMQ/FrontendGYMQ/src/Layouts/DataStore/DataStore.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst DataStore = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedCategory, setSelectedCategory] = useState(null);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const handleCategorySelect = (category) => {\r\n    setSelectedCategory(category);\r\n    setSearchQuery(''); // Restablece el término de búsqueda al seleccionar una categoría\r\n    setIsOpen(false);\r\n    // Aquí puedes llamar a una función para cargar las tarjetas relacionadas con la categoría seleccionada\r\n    // por ejemplo: loadCardsByCategory(category);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  // Ejemplo de lista de tarjetas (cada tarjeta es un objeto con propiedades específicas)\r\n  const cards = [\r\n    {\r\n      id: 1,\r\n      title: 'Tarjeta 1',\r\n      category: 'Categoría 1',\r\n      description: 'Esta es la descripción de la Tarjeta 1',\r\n      place: '000',\r\n      image: 'imagen1.jpg',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Tarjeta 2',\r\n      category: 'Categoría 2',\r\n      description: 'Esta es la descripción de la Tarjeta 2',\r\n      place: '000',\r\n      image: 'imagen2.jpg',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Tarjeta 3',\r\n      category: 'Categoría 3',\r\n      description: 'Esta es la descripción de la Tarjeta 3',\r\n      place: '000',\r\n      image: 'imagen3.jpg',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Tarjeta 4',\r\n      category: 'Categoría 4',\r\n      description: 'Esta es la descripción de la Tarjeta 4',\r\n      place: '000',\r\n      image: 'imagen4.jpg',\r\n    },\r\n  ];\r\n\r\n  // Filtra las tarjetas según la categoría seleccionada y el término de búsqueda\r\n  const filteredCards = cards.filter((card) => {\r\n    if (selectedCategory && card.category !== selectedCategory) {\r\n      return false; // Ignora las tarjetas que no coinciden con la categoría seleccionada\r\n    }\r\n    if (searchQuery && !card.title.toLowerCase().includes(searchQuery.toLowerCase())) {\r\n      return false; // Ignora las tarjetas que no coinciden con el término de búsqueda\r\n    }\r\n    return true;\r\n  });\r\n\r\n  return (\r\n    <div className=\"products\">\r\n      <button className=\"categoryProducts\" onClick={toggleDropdown}>\r\n        Categorías\r\n      </button>\r\n      {selectedCategory && (\r\n        <div className=\"searchProducts\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchQuery}\r\n            onChange={handleSearch}\r\n            placeholder=\"Buscar...\"\r\n          />\r\n        </div>\r\n      )}\r\n      {isOpen && (\r\n        <ul className=\"categorys\">\r\n          <li onClick={() => handleCategorySelect('Categoría 1')}>Categoría 1</li>\r\n          <li onClick={() => handleCategorySelect('Categoría 2')}>Categoría 2</li>\r\n          <li onClick={() => handleCategorySelect('Categoría 3')}>Categoría 3</li>\r\n        </ul>\r\n      )}\r\n      {selectedCategory && (\r\n        <div className=\"selectedCategory\">\r\n          <h3>Tarjetas de la categoría: {selectedCategory}</h3>\r\n          {filteredCards.length > 0 ? (\r\n            <ul>\r\n              {filteredCards.map((card) => (\r\n                <li key={card.id}>\r\n                  <h4>{card.title}</h4>\r\n                  <p>{card.description}</p>\r\n                  <p>{card.description}</p>\r\n                  <img src={card.image} alt={card.title} />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No hay tarjetas disponibles.</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataStore;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}