{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// import CardArm from './CardArm';\n// import CardArms from './CardArms';\n// import CardBack from './CardBack';\n// import CardBacks from './CardBacks';\n// import CardGluteu from './CardGluteu';\n// import CardGluteus from './CardGluteus';\n// import CardLeg from './CardLeg';\n// import CardLegs from './CardLegs';\n\n// const CardComponent = () => {\n//   const [selectedButton, setSelectedButton] = useState(null);\n\n//   const handleButtonClick = (buttonId) => {\n//     setSelectedButton(buttonId);\n//   };\n\n//   const renderCards = () => {\n//     // Aquí puedes reemplazar \"data\" con tu propio conjunto de datos de tarjetas\n//     const data = [\n//       { id: 1, buttonId: 'button1', content: <div><div className='store-cards'>\n//         <CardArm/>\n//       </div>\n//       <div className='store-cards'>\n//         <CardArms/>\n//       </div></div> },\n//       { id: 2, buttonId: 'button2', content: <div><div className='store-cards'>\n//       <CardBack/>\n//     </div>\n//     <div className='store-cards'>\n//       <CardBacks/>\n//     </div></div> },\n//       { id: 3, buttonId: 'button3', content: <div><div className='store-cards'>\n//       <CardGluteu/>\n//     </div>\n//     <div className='store-cards'>\n//       <CardGluteus/>\n//     </div></div> },\n//       { id: 4, buttonId: 'button4', content: <div><div className='store-cards'>\n//       <CardLeg/>\n//     </div>\n//     <div className='store-cards'>\n//       <CardLegs/>\n//     </div></div> },\n//     ];\n\n//     // Filtra las tarjetas basadas en el botón seleccionado\n//     const filteredCards = data.filter((card) => card.buttonId === selectedButton);\n\n//     return filteredCards.map((card) => (\n//       <div key={card.id}>{card.content}</div>\n//     ));\n//   };\n\n//   return (\n//     <>\n//     <div className='buttons'>\n//       <button className='btns' onClick={() => handleButtonClick('button1')}>Brazo</button>\n//       <button className='btns' onClick={() => handleButtonClick('button2')}>Espalda</button>\n//       <button className='btns' onClick={() => handleButtonClick('button3')}>Glúteo</button>\n//       <button className='btns' onClick={() => handleButtonClick('button4')}>Pierna</button>\n//     </div>\n//       {renderCards()}\n//     </>\n//   );\n// };\n\n// export default CardComponent;\n\nconst Components = () => {\n  _s();\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const handleOptionClick = option => {\n    if (selectedOptions.indexOf(option)) {\n      setSelectedOptions(selectedOptions.filter(item => item !== option));\n    } else {\n      setSelectedOptions([...selectedOptions, option]);\n    }\n  };\n  const options = [{\n    id: 1,\n    name: 'Option 1'\n  }];\n};\n_s(Components, \"S24nRharoliKpDmkOrz7zqRL0rI=\");\n_c = Components;\nvar _c;\n$RefreshReg$(_c, \"Components\");","map":{"version":3,"names":["React","useState","Components","_s","selectedOptions","setSelectedOptions","handleOptionClick","option","indexOf","filter","item","options","id","name","_c","$RefreshReg$"],"sources":["C:/Users/USUARIO/Documents/GYMQ/FrontendGYMQ/src/Layouts/CardComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\n// import CardArm from './CardArm';\r\n// import CardArms from './CardArms';\r\n// import CardBack from './CardBack';\r\n// import CardBacks from './CardBacks';\r\n// import CardGluteu from './CardGluteu';\r\n// import CardGluteus from './CardGluteus';\r\n// import CardLeg from './CardLeg';\r\n// import CardLegs from './CardLegs';\r\n \r\n// const CardComponent = () => {\r\n//   const [selectedButton, setSelectedButton] = useState(null);\r\n\r\n//   const handleButtonClick = (buttonId) => {\r\n//     setSelectedButton(buttonId);\r\n//   };\r\n\r\n//   const renderCards = () => {\r\n//     // Aquí puedes reemplazar \"data\" con tu propio conjunto de datos de tarjetas\r\n//     const data = [\r\n//       { id: 1, buttonId: 'button1', content: <div><div className='store-cards'>\r\n//         <CardArm/>\r\n//       </div>\r\n//       <div className='store-cards'>\r\n//         <CardArms/>\r\n//       </div></div> },\r\n//       { id: 2, buttonId: 'button2', content: <div><div className='store-cards'>\r\n//       <CardBack/>\r\n//     </div>\r\n//     <div className='store-cards'>\r\n//       <CardBacks/>\r\n//     </div></div> },\r\n//       { id: 3, buttonId: 'button3', content: <div><div className='store-cards'>\r\n//       <CardGluteu/>\r\n//     </div>\r\n//     <div className='store-cards'>\r\n//       <CardGluteus/>\r\n//     </div></div> },\r\n//       { id: 4, buttonId: 'button4', content: <div><div className='store-cards'>\r\n//       <CardLeg/>\r\n//     </div>\r\n//     <div className='store-cards'>\r\n//       <CardLegs/>\r\n//     </div></div> },\r\n//     ];\r\n\r\n//     // Filtra las tarjetas basadas en el botón seleccionado\r\n//     const filteredCards = data.filter((card) => card.buttonId === selectedButton);\r\n\r\n//     return filteredCards.map((card) => (\r\n//       <div key={card.id}>{card.content}</div>\r\n//     ));\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//     <div className='buttons'>\r\n//       <button className='btns' onClick={() => handleButtonClick('button1')}>Brazo</button>\r\n//       <button className='btns' onClick={() => handleButtonClick('button2')}>Espalda</button>\r\n//       <button className='btns' onClick={() => handleButtonClick('button3')}>Glúteo</button>\r\n//       <button className='btns' onClick={() => handleButtonClick('button4')}>Pierna</button>\r\n//     </div>\r\n//       {renderCards()}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default CardComponent;\r\n\r\nconst Components = () => {\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n\r\n  const handleOptionClick = (option) => {\r\n    if (selectedOptions.indexOf(option)) {\r\n      setSelectedOptions(selectedOptions.filter((item) => item !== option));\r\n    } else {\r\n      setSelectedOptions([...selectedOptions, option])\r\n    }\r\n  }\r\n\r\n  const options = [\r\n    { id: 1, name: 'Option 1'}\r\n  ]\r\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMK,iBAAiB,GAAIC,MAAM,IAAK;IACpC,IAAIH,eAAe,CAACI,OAAO,CAACD,MAAM,CAAC,EAAE;MACnCF,kBAAkB,CAACD,eAAe,CAACK,MAAM,CAAEC,IAAI,IAAKA,IAAI,KAAKH,MAAM,CAAC,CAAC;IACvE,CAAC,MAAM;MACLF,kBAAkB,CAAC,CAAC,GAAGD,eAAe,EAAEG,MAAM,CAAC,CAAC;IAClD;EACF,CAAC;EAED,MAAMI,OAAO,GAAG,CACd;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAU,CAAC,CAC3B;AACH,CAAC;AAAAV,EAAA,CAdKD,UAAU;AAAAY,EAAA,GAAVZ,UAAU;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}