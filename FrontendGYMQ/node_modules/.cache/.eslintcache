[{"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Pages\\Home.js":"1","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\HomeNavBar.jsx":"2","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\MenuDesplegable.js":"3","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\NavBar\\NavBar.jsx":"4","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\Modal.js":"5","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\Main\\Main.jsx":"6","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Ui\\Buttons\\MainButton.jsx":"7","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Pages\\Routines.js":"8","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\Components.js":"9","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardList.js":"10","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardArms.js":"11","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardLeg.js":"12","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardBacks.js":"13","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardGluteus.js":"14","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Pages\\Gym.js":"15","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardLegs.js":"16","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardArm.js":"17","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardBack.js":"18","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardGluteu.js":"19","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\FileGym.js":"20","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Ui\\Target.js":"21","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Ui\\Cards\\Cards.js":"22","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Ui\\Cards\\GymCards.js":"23"},{"size":433,"mtime":1686486929745,"results":"24","hashOfConfig":"25"},{"size":1015,"mtime":1686508129575,"results":"26","hashOfConfig":"25"},{"size":1064,"mtime":1686508099584,"results":"27","hashOfConfig":"25"},{"size":900,"mtime":1686508121771,"results":"28","hashOfConfig":"25"},{"size":16914,"mtime":1686484974202,"results":"29","hashOfConfig":"25"},{"size":518,"mtime":1686491835253,"results":"30","hashOfConfig":"25"},{"size":170,"mtime":1686491919257,"results":"31","hashOfConfig":"25"},{"size":517,"mtime":1686497891081,"results":"32","hashOfConfig":"25"},{"size":2338,"mtime":1686502681562,"results":"33","hashOfConfig":"25"},{"size":1400,"mtime":1686503282830,"results":"34","hashOfConfig":"25"},{"size":1439,"mtime":1686503447913,"results":"35","hashOfConfig":"25"},{"size":1442,"mtime":1686503620312,"results":"36","hashOfConfig":"25"},{"size":1457,"mtime":1686503507337,"results":"37","hashOfConfig":"25"},{"size":1439,"mtime":1686503588265,"results":"38","hashOfConfig":"25"},{"size":337,"mtime":1686506560882,"results":"39","hashOfConfig":"25"},{"size":1401,"mtime":1686503653993,"results":"40","hashOfConfig":"25"},{"size":1440,"mtime":1686503415872,"results":"41","hashOfConfig":"25"},{"size":1419,"mtime":1686503467273,"results":"42","hashOfConfig":"25"},{"size":1426,"mtime":1686503553267,"results":"43","hashOfConfig":"25"},{"size":2141,"mtime":1686503899634,"results":"44","hashOfConfig":"25"},{"size":3979,"mtime":1686502981613,"results":"45","hashOfConfig":"25"},{"size":3017,"mtime":1686256926598,"results":"46","hashOfConfig":"25"},{"size":479,"mtime":1686506410428,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h1qgbp",{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Pages\\Home.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\HomeNavBar.jsx",["121"],[],"import React, { useState } from 'react'\r\nimport ModalWindow from './Modal'\r\nimport MenuDesplegable from './MenuDesplegable'\r\n\r\nexport const HomeNavBar = () => {\r\n  const [showMenu, setShowMenu] = useState(false)\r\n\r\n  const toggleMenu = () => {\r\n    setShowMenu(!showMenu)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <nav className='navBar'>\r\n          <div className={`navBarList ${showMenu ? 'show' : ''}`}>\r\n              <ul className='nav_bar'>\r\n                  <li style={{backgroundColor: '#FFFF00'}}><a style={{color: '#000'}} href=\"/\">Inicio</a></li>\r\n                  <li><a href=\"/\">Planes</a></li>\r\n                  <li><a href=\"/Rutinas\">Rutinas</a></li> \r\n                  <li><a href=\"/\">Tienda</a></li> \r\n                  <li><a href=\"/Gimnasios\">Gimnasios</a></li> \r\n              </ul>\r\n          </div>\r\n            <ul className='user'>\r\n              <li style={{backgroundColor: '#000'}}><ModalWindow/></li>\r\n            </ul>\r\n        </nav>\r\n        <MenuDesplegable/>\r\n    </div>\r\n  )\r\n}\r\n",[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\MenuDesplegable.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\NavBar\\NavBar.jsx",["122"],[],"import React, { useState } from 'react'\r\nimport ModalWindow from '../Modal'\r\nimport MenuDesplegable from '../MenuDesplegable'\r\n\r\nexport const NavBar = () => {\r\n  const [showMenu, setShowMenu] = useState(false)\r\n\r\n  const toggleMenu = () => {\r\n    setShowMenu(!showMenu)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <nav className='navBar'>\r\n          <div className={`navBarList ${showMenu ? 'show' : ''}`}>\r\n              <ul className='navBarItems'>\r\n                  <li style={{backgroundColor: '#FFFF00'}}><a style={{color: '#000'}} href=\"/\">Inicio</a></li>\r\n                  <li><a href=\"/Rutinas\">Rutinas</a></li> \r\n                  <li><a href=\"/\">Tienda</a></li> \r\n                  <li><a href=\"/Gimnasios\">Gimnasios</a></li> \r\n              </ul>\r\n          </div>\r\n            <div className='navBarModal'><ModalWindow/></div>\r\n        </nav>\r\n        <MenuDesplegable/>\r\n    </div>\r\n  )\r\n} ","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\Modal.js",["123","124","125","126","127","128"],[],"import React, {useState,useRef,useEffect,useContext} from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { faCheck, faTimes, faInfoCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from '../api/axios';\r\nimport AuthContext from \"../context/AuthProvider\";\r\n\r\nconst USER_REGEX = /^[A-z][A-z0-9-_]{3,23}$/;\r\nconst PWD_REGEX = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%]).{8,24}$/;\r\nconst REGISTER_URL = '/register';\r\nconst LOGIN_URL = '/auth';\r\n\r\n\r\n\r\nconst ModalWindow = () => {\r\n    let subtitle;\r\n    const [isFirstModalOpen, setIsFirstModalOpen] = useState(false);\r\n    const [isSecondModalOpen, setIsSecondModalOpen] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const navigate = useNavigate();\r\n\r\n    const handleLogin = () => {\r\n        \r\n    }\r\n\r\n    const openFirstModal = () => {\r\n        setIsFirstModalOpen(true)\r\n        setIsSecondModalOpen(false);\r\n    }\r\n    const closeFirstModal = () => {\r\n        setIsFirstModalOpen(false);\r\n    }  \r\n\r\n    function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    subtitle.style.color = '#FFFF00';\r\n    subtitle.style.textAlign = 'center';\r\n  }\r\n\r\n  const openSecondModal = () => {\r\n    setIsSecondModalOpen(true);\r\n    setIsFirstModalOpen(false);\r\n}\r\nconst closeSecondModal = () => {\r\n    setIsSecondModalOpen(false);\r\n}\r\n\r\nconst closeModal = () => {\r\n    setIsFirstModalOpen(false)\r\n    setIsSecondModalOpen(false)\r\n}\r\n\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [user,setUser] = useState('');\r\n    const [validName, setValidName] = useState(false);\r\n    const [userFocus, setUserFocus] = useState(false);\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    const [phone,setPhone] = useState(''); \r\n\r\n    const [email,setEmail] = useState('');\r\n \r\n    const [pwd, setPwd] = useState('');\r\n    const [validPwd, setValidPwd] = useState(false);\r\n    const [pwdFocus, setPwdFocus] = useState(false);\r\n\r\n\r\n    const [matchPwd, setMatchPwd] = useState('');\r\n    const [validMatch, setValidMatch] = useState(false);\r\n    const [matchFocus, setMatchFocus] = useState(false);\r\n\r\n    const [errMsg, setErrMsg] = useState('');\r\n\r\n\r\n    useEffect(() => {\r\n        setValidName(USER_REGEX.test(user))\r\n    }, [user])\r\n\r\n    useEffect(() => {\r\n        setValidPwd(PWD_REGEX.test(pwd));\r\n        setValidMatch(pwd === matchPwd);\r\n    }, [pwd, matchPwd])\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd, matchPwd])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const v1 = USER_REGEX.test(user);\r\n        const v2 = PWD_REGEX.test(pwd);\r\n\r\n        if (!v1 || !v2) {\r\n            setErrMsg(\"Invalid Entry\");\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axios.post(REGISTER_URL,\r\n                JSON.stringify({ user,name,phone,email,pwd }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            console.log(JSON.stringify(response?.data));\r\n            setUser('');\r\n            setName('');\r\n            setPhone('');\r\n            setEmail('');\r\n            setPwd('');\r\n            setMatchPwd('');\r\n            \r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 409) {\r\n                setErrMsg('Username Taken');\r\n            } else {\r\n                setErrMsg('Registration Failed')\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n    const {setAuth} = useContext(AuthContext);\r\n\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [user, pwd])\r\n\r\n    const handleSubmit2 = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            const response = await axios.post(LOGIN_URL,\r\n                JSON.stringify({ user, pwd }),\r\n                {\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            console.log(JSON.stringify(response?.data));\r\n            const accessToken = response?.data?.accessToken;\r\n            const roles = response?.data?.roles;\r\n            setAuth({ user, pwd, roles, accessToken });\r\n            setUser('');\r\n            setPwd('');\r\n            setIsLoggedIn(true);\r\n            navigate('/home')\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            } else if (err.response?.status === 400) {\r\n                setErrMsg('Missing Username or Password');\r\n            } else if (err.response?.status === 401) {\r\n                setErrMsg('Unauthorized');\r\n            } else {\r\n                setErrMsg('Login Failed');\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n\r\n\r\n  return (\r\n    <div className='windowsModal'>\r\n        <a onClick={openFirstModal}>Ingresar /</a>\r\n        <a onClick={openSecondModal}> Crear Cuenta</a>\r\n      \r\n        <Modal className='modal1' isOpen={isFirstModalOpen} onClose={closeFirstModal} onAfterOpen={afterOpenModal}>\r\n            <form className=\"form\">\r\n            <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Iniciar Sesión</h2>\r\n                <div className=\"field\">\r\n                    <svg className='input-icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0Zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4Zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10Z\"/>\r\n                    </svg>\r\n                    <input autocomplete=\"off\" \r\n                    placeholder=\"Nombre Usuario\"\r\n                    id='username'\r\n                    className=\"input-field\" \r\n                    type=\"text\"\r\n                    ref={userRef}\r\n                    onChange={(e) => setUser(e.target.value)}\r\n                    value={user}\r\n                    required/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <svg className=\"input-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"></path>\r\n                    </svg>\r\n                    <input placeholder=\"Contraseña\" \r\n                    className=\"input-field\" \r\n                    type=\"password\"\r\n                    id='password'\r\n                    onChange={(e) => setPwd(e.target.value)}\r\n                    value={pwd}\r\n                    required/>\r\n                </div>\r\n                <div className=\"btn\">\r\n                    <button onClick={handleSubmit2} onChange={handleLogin} className=\"button1\">Ingresar</button>\r\n                    <button onClick={openSecondModal} className=\"button2\">Registrarse</button>\r\n                </div>\r\n                <button class=\"button4\">¿Olvidaste tu contraseña?</button>\r\n            </form>\r\n            <a className='close' onClick={closeModal}>Cerrar</a>\r\n        </Modal>\r\n        <Modal style={{border: 'none'}} className='modal2' isOpen={isSecondModalOpen} onClose={closeSecondModal} onAfterOpen={afterOpenModal}>\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n        <p ref={errRef} className={errMsg ? \"errmsg\" : \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Registrarse</h2>\r\n                <div className=\"field\">\r\n                    <svg className='input-icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0Zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4Zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10Z\"/>\r\n                    </svg>\r\n                    <FontAwesomeIcon icon={faCheck} className={validName ? \"valid\" : \"hide\"} />\r\n                    <FontAwesomeIcon icon={faTimes} className={validName || !user ? \"hide\" : \"invalid\"} />\r\n                    <input autocomplete=\"off\" \r\n                    placeholder=\"Nombre Usuario\" \r\n                    className=\"input-field\" \r\n                    type=\"text\" \r\n                    id=\"username\" \r\n                    ref={userRef} \r\n                    onChange={(e) => setUser(e.target.value)} \r\n                    value={user} \r\n                    required \r\n                    aria-invalid={validName ? \"false\" : \"true\"} \r\n                    aria-aria-describedby='uidnote' \r\n                    onFocus={() => setUserFocus(true)} \r\n                    onBlur={() => setUserFocus(false)}/>\r\n                </div>\r\n                <p id=\"uidnote\" className={userFocus && user && !validName ? \"instructions\" : \"offscreen\"}>\r\n                        <FontAwesomeIcon icon={faInfoCircle} />\r\n                        4 a 24 caracteres.<br />\r\n                        Debe comenzar con una letra.<br />\r\n                        Se permiten letras, números, guiones bajos y guiones.\r\n                    </p>\r\n                <div className=\"field\">\r\n                    <svg className='input-icon' xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-person\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0Zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4Zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10Z\"/>\r\n                    </svg>\r\n                    <input autocomplete=\"off\" \r\n                    placeholder=\"Nombre y Apellidos\" \r\n                    className=\"input-field\" \r\n                    type=\"text\" \r\n                    id='name' \r\n                    ref={userRef}  \r\n                    onChange={(e) => setName(e.target.value)} \r\n                    value={name}/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-telephone\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M3.654 1.328a.678.678 0 0 0-1.015-.063L1.605 2.3c-.483.484-.661 1.169-.45 1.77a17.568 17.568 0 0 0 4.168 6.608 17.569 17.569 0 0 0 6.608 4.168c.601.211 1.286.033 1.77-.45l1.034-1.034a.678.678 0 0 0-.063-1.015l-2.307-1.794a.678.678 0 0 0-.58-.122l-2.19.547a1.745 1.745 0 0 1-1.657-.459L5.482 8.062a1.745 1.745 0 0 1-.46-1.657l.548-2.19a.678.678 0 0 0-.122-.58L3.654 1.328zM1.884.511a1.745 1.745 0 0 1 2.612.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z\"/>\r\n                    </svg>\r\n                    <input autocomplete=\"off\" \r\n                    placeholder=\"Telefono\" \r\n                    className=\"input-field\"\r\n                    type=\"text\" \r\n                    id='phone' \r\n                    onChange={(e) => setPhone(e.target.value)} \r\n                    value={phone}/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <svg className=\"input-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M13.106 7.222c0-2.967-2.249-5.032-5.482-5.032-3.35 0-5.646 2.318-5.646 5.702 0 3.493 2.235 5.708 5.762 5.708.862 0 1.689-.123 2.304-.335v-.862c-.43.199-1.354.328-2.29.328-2.926 0-4.813-1.88-4.813-4.798 0-2.844 1.921-4.881 4.594-4.881 2.735 0 4.608 1.688 4.608 4.156 0 1.682-.554 2.769-1.416 2.769-.492 0-.772-.28-.772-.76V5.206H8.923v.834h-.11c-.266-.595-.881-.964-1.6-.964-1.4 0-2.378 1.162-2.378 2.823 0 1.737.957 2.906 2.379 2.906.8 0 1.415-.39 1.709-1.087h.11c.081.67.703 1.148 1.503 1.148 1.572 0 2.57-1.415 2.57-3.643zm-7.177.704c0-1.197.54-1.907 1.456-1.907.93 0 1.524.738 1.524 1.907S8.308 9.84 7.371 9.84c-.895 0-1.442-.725-1.442-1.914z\"></path>\r\n                    </svg>\r\n                    <input autocomplete=\"off\" \r\n                    placeholder=\"Correo\" \r\n                    className=\"input-field\" \r\n                    type=\"text\" id='email' \r\n                    ref={userRef} \r\n                    onChange={(e) => setEmail(e.target.value)} \r\n                    value={email}/>\r\n                </div>\r\n                <div className=\"field\">\r\n                    <svg className=\"input-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"></path>\r\n                    </svg>\r\n                    <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\r\n                    <FontAwesomeIcon icon={faTimes} className={validPwd || !pwd ? \"hide\" : \"invalid\"} />\r\n                    <input placeholder=\"Contraseña\" \r\n                    className=\"input-field\" \r\n                    type=\"password\" \r\n                    id='password' \r\n                    onChange={(e) => setPwd(e.target.value)} \r\n                    value={pwd} \r\n                    required\r\n                    aria-invalid={validPwd ? \"false\" : \"true\"}\r\n                    aria-describedby=\"pwdnote\"\r\n                    onFocus={() => setPwdFocus(true)}\r\n                    onBlur={() => setPwdFocus(false)}/>\r\n                </div>\r\n                <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\r\n                    <FontAwesomeIcon icon={faInfoCircle} />\r\n                    8 a 24 caracteres.<br />\r\n                    Debe incluir letras mayúsculas y minúsculas, un número y un carácter especial.<br />\r\n                    Caracteres especiales permitidos: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\r\n                </p>\r\n                <div className=\"field\">\r\n                    <svg className=\"input-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" viewBox=\"0 0 16 16\">\r\n                        <path d=\"M8 1a2 2 0 0 1 2 2v4H6V3a2 2 0 0 1 2-2zm3 6V3a3 3 0 0 0-6 0v4a2 2 0 0 0-2 2v5a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V9a2 2 0 0 0-2-2z\"></path>\r\n                    </svg>\r\n                    <FontAwesomeIcon icon={faCheck} className={validMatch && matchPwd ? \"valid\" : \"hide\"} />\r\n                    <FontAwesomeIcon icon={faTimes} className={validMatch || !matchPwd ? \"hide\" : \"invalid\"} />\r\n                    <input placeholder=\"Confirmación de contraseña\" \r\n                    className=\"input-field\" \r\n                    type=\"password\" \r\n                    id='confirm_pwd' \r\n                    onChange={(e) => setMatchPwd(e.target.value)} \r\n                    value={matchPwd} \r\n                    required\r\n                    aria-invalid={validMatch ? \"false\" : \"true\"}\r\n                    aria-describedby=\"confirmnote\"\r\n                    onFocus={() => setMatchFocus(true)}\r\n                    onBlur={() => setMatchFocus(false)}/>\r\n                </div>\r\n                <p id=\"confirmnote\" className={matchFocus && !validMatch ? \"instructions\" : \"offscreen\"}>\r\n                    <FontAwesomeIcon icon={faInfoCircle} />\r\n                    Debe coincidir con el primer campo de entrada de contraseña.\r\n                </p>\r\n                <div className=\"btn\">\r\n                    <button className=\"button1\">Crear Cuenta</button>\r\n                    <button onClick={openFirstModal} className=\"button2\">Iniciar Sesión</button>\r\n                </div>\r\n                <button class=\"button4\">¡Registra tu Gimnasio!</button>\r\n            </form>\r\n            <a className='close' onClick={closeModal}>Cerrar</a>\r\n        </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalWindow;","C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\Main\\Main.jsx",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Ui\\Buttons\\MainButton.jsx",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Pages\\Routines.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\Components.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardList.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardArms.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardLeg.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardBacks.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardGluteus.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Pages\\Gym.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardLegs.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardArm.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardBack.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\CardGluteu.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Layouts\\FileGym.js",[],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Ui\\Target.js",["129","130","131","132","133"],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Ui\\Cards\\Cards.js",["134","135"],[],"C:\\Users\\USUARIO\\Documents\\GYMQ\\FrontendGYMQ\\src\\Ui\\Cards\\GymCards.js",[],[],{"ruleId":"136","severity":1,"message":"137","line":8,"column":9,"nodeType":"138","messageId":"139","endLine":8,"endColumn":19},{"ruleId":"136","severity":1,"message":"137","line":8,"column":9,"nodeType":"138","messageId":"139","endLine":8,"endColumn":19},{"ruleId":"136","severity":1,"message":"140","line":20,"column":12,"nodeType":"138","messageId":"139","endLine":20,"endColumn":22},{"ruleId":"141","severity":1,"message":"142","line":171,"column":9,"nodeType":"143","endLine":171,"endColumn":37},{"ruleId":"141","severity":1,"message":"142","line":172,"column":9,"nodeType":"143","endLine":172,"endColumn":38},{"ruleId":"141","severity":1,"message":"142","line":210,"column":13,"nodeType":"143","endLine":210,"endColumn":55},{"ruleId":"144","severity":1,"message":"145","line":232,"column":21,"nodeType":"146","endLine":232,"endColumn":52},{"ruleId":"141","severity":1,"message":"142","line":331,"column":13,"nodeType":"143","endLine":331,"endColumn":55},{"ruleId":"147","severity":1,"message":"148","line":8,"column":22,"nodeType":"143","endLine":8,"endColumn":62},{"ruleId":"147","severity":1,"message":"148","line":12,"column":18,"nodeType":"143","endLine":12,"endColumn":64},{"ruleId":"141","severity":1,"message":"149","line":14,"column":17,"nodeType":"143","endLine":14,"endColumn":29},{"ruleId":"141","severity":1,"message":"149","line":19,"column":17,"nodeType":"143","endLine":19,"endColumn":29},{"ruleId":"141","severity":1,"message":"149","line":24,"column":17,"nodeType":"143","endLine":24,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":8,"column":46,"nodeType":"143","endLine":8,"endColumn":88},{"ruleId":"141","severity":1,"message":"142","line":24,"column":21,"nodeType":"143","endLine":24,"endColumn":24},"no-unused-vars","'toggleMenu' is assigned a value but never used.","Identifier","unusedVar","'isLoggedIn' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/aria-props","aria-aria-describedby: This attribute is an invalid ARIA attribute.","JSXAttribute","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]